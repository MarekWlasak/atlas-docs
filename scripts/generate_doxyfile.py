#!/usr/bin/env python3
import os
import argparse
from pathlib import Path


scripts = Path(__file__).parent.resolve()
atlas_docs = scripts.parent.resolve()

parser = argparse.ArgumentParser(description='Generate Doxyfile')
parser.add_argument('--public', action='store_true', help='public version')
parser.add_argument('--output', '-o', type=str, default="",
                    help='output file')
parser.add_argument('--atlas', type=str, default=str(atlas_docs/"downloads/atlas"))
parser.add_argument('--eckit', type=str, default=str(atlas_docs/"downloads/eckit"))
parser.add_argument('--version', type=str, default="")
parser.add_argument('--with-eckit', action='store_true', help='Add eckit to atlas API')

args = parser.parse_args()

atlas_project_url = "/"
if args.public:
    atlas_project_url = os.getenv("SITEURL", "https://sites.ecmwf.int/docs/atlas")

atlas = args.atlas
eckit = args.eckit
version = args.version
if not version:
    version_file = Path(atlas)/'VERSION'
    if version_file.exists():
        with open('/'.join([atlas, 'VERSION']), "r") as file:
            version = file.read().strip()
    else:
        version = "0.0.0"

output = args.output
if not output:
    output = Path(atlas_docs) / "build/doxygen/Doxyfile"
else:
    output = Path(output)

output_dir = output.parent
output_dir.mkdir(parents=True, exist_ok=True)


doxygen = """
INPUT              = {atlas}/doc/pages
INPUT             += {atlas}/src/atlas
INPUT             += {atlas_aliases}/src/atlas

OUTPUT_DIRECTORY   = {output_dir}

STRIP_FROM_PATH    = {atlas}/src
STRIP_FROM_PATH   += {atlas_aliases}/src
STRIP_FROM_PATH   += {atlas}/doc/pages

PROJECT_NAME       = Atlas [{version}]
PROJECT_NUMBER     = {version}
PROJECT_BRIEF      = \"C++ docs\"

ALIASES           += project_version={version}

DOTFILE_DIRS       = {atlas}/doc/pages
TAGFILES           = {atlas_docs}/scripts/doxygen/stl.tag=http://en.cppreference.com/w/

GENERATE_TAGFILE   = {output_dir}/atlas.tag

##! M_PAGE_FINE_PRINT = "<p>Atlas docs. Part of the <a href="{atlas_project_url}">Atlas project</a>, copyright \u00A9 <a href="http://ecmwf.int">ECMWF</a><br />Generated by <a href="https://doxygen.org/">Doxygen</a> and <a href="https://mcss.mosra.cz/">m.css</a>. Contact the team via <a href="https://github.com/ecmwf/atlas">GitHub</a>.</p>"
##! M_MAIN_PROJECT_URL = {atlas_project_url}

""".format( atlas=atlas,eckit=eckit,version=version,output_dir=output_dir,atlas_docs=atlas_docs,atlas_project_url=atlas_project_url,
            atlas_aliases=atlas_docs/"aliases/atlas")

if args.with_eckit:
    doxygen += """
INPUT            += {eckit}/src/eckit
STRIP_FROM_PATH  += {eckit}/src

""".format(eckit=eckit)

os.makedirs(output_dir, exist_ok=True)

with open(output, "w", encoding='utf-8') as file:

    for doxyfile_name in ['Doxyfile-default','Doxyfile-custom','Doxyfile-mcss'] :
        with open(atlas_docs/"scripts"/"doxygen"/doxyfile_name) as doxyfile:
            file.write(doxyfile.read())

    file.write(doxygen)
